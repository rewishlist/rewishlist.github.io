{"version":3,"sources":["Map.js","ItemBox.js","App.js","index.js"],"names":["DEFAULT_COLOR","HIGHLIGHTED_COLOR","USER_ITEM_COLOR","INITIAL_VIEW_STATE","zoom","maxZoom","pitch","bearing","Map","props","state","isMounted","this","data","strokeWidth","ArcLayer","id","coef","getSourcePosition","d","from","getTargetPosition","to","getSourceColor","isUsetItem","highlighted","getTargetColor","getWidth","mapStyle","userLocation","layers","_renderLayers","initialViewState","longitude","latitude","controller","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","_renderTooltip","Component","StyledItemBox","styled","Grid","Info","Title","div","Description","Price","BottomSection","isPlaceholder","Buy","Button","Countdown","StyledBottomSection","countdownValue","container","xs","item","css","variant","Image","src","Overlay","ItemBox","useState","initTimestamp","setInitTimestamp","setCountdownValue","useEffect","deadline","Date","now","deadlineInterval","setInterval","diff","differenceInMilliseconds","format","getCountdown","clearInterval","onMouseEnter","onHoverEnter","onMouseLeave","onHoverLeave","image","title","description","price","Math","round","OPTIONS","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","MY_LOCATION","ITEMS","LOCATIONS","GlobalStyles","html","height","body","margin","padding","fontFamily","AppContainer","ItemContainer","MapContainer","App","setData","userItem","Fuse","query","qs","parse","window","search","substr","product_json","JSON","console","log","brand","image_url","isUserItem","getUserItem","navigator","geolocation","getCurrentPosition","position","setTimeout","onHover","key","newLocations","map","itemKey","onLeave","spacing","styles","TextField","label","fullWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27acbb66.chunk.js","sourcesContent":["/* global fetch */\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { GeoJsonLayer, ArcLayer } from \"@deck.gl/layers\";\nimport { scaleQuantile } from \"d3-scale\";\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoiZ2FyeWFuaWtpbiIsImEiOiJjazMxa2M4aW8wNzhzM2JwOWdiYW94dmZqIn0.41wPlZxL13A9TVP2hkF9Zw\";\n\nconst DEFAULT_COLOR = [130, 130, 130];\nconst HIGHLIGHTED_COLOR = [255, 136, 0];\nconst USER_ITEM_COLOR = [255, 81, 100];\n\nconst INITIAL_VIEW_STATE = {\n  zoom: 11,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n\n/* eslint-disable react/no-deprecated */\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // hoveredCounty: null,\n      // Set default selection to San Francisco\n      // selectedCounty: null,\n      isMounted: false\n    };\n    // this._onHoverCounty = this._onHoverCounty.bind(this);\n    // this._onSelectCounty = this._onSelectCounty.bind(this);\n    // this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  // componentDidMount() {\n  //   if (!this.state.isMounted) {\n  //     this.setState({ isMounted: true });\n  //     this._recalculateArcs(this.props.data);\n  //   }\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.data !== this.props.data && this.state.isMounted) {\n  //     this._recalculateArcs(nextProps.data);\n  //   }\n  // }\n\n  // _onHoverCounty({ x, y, object }) {\n  //   this.setState({ x, y, hoveredCounty: object });\n  // }\n\n  // _onSelectCounty({ object }) {\n  //   this._recalculateArcs(this.props.data, object);\n  // }\n\n  // _renderTooltip() {\n  //   const { x, y, hoveredCounty } = this.state;\n  //   return (\n  //     hoveredCounty && (\n  //       <div className=\"tooltip\" style={{ left: x, top: y }}>\n  //         {hoveredCounty.properties.name}\n  //       </div>\n  //     )\n  //   );\n  // }\n\n  // _recalculateArcs(data, selectedCounty = this.state.selectedCounty) {\n  //   if (!data) {\n  //     return;\n  //   }\n  //   if (!selectedCounty) {\n  //     selectedCounty = data.find(f => f.properties.name === \"Los Angeles, CA\");\n  //   }\n  //   const { flows, centroid } = selectedCounty.properties;\n\n  //   const arcs = Object.keys(flows).map(toId => {\n  //     const f = data[toId];\n  //     return {\n  //       source: centroid,\n  //       target: f.properties.centroid,\n  //       value: flows[toId]\n  //     };\n  //   });\n\n  //   const scale = scaleQuantile()\n  //     .domain(arcs.map(a => Math.abs(a.value)))\n  //     .range(inFlowColors.map((c, i) => i));\n\n  //   arcs.forEach(a => {\n  //     a.gain = Math.sign(a.value);\n  //     a.quantile = scale(Math.abs(a.value));\n  //   });\n\n  //   if (this.props.onSelectCounty) {\n  //     this.props.onSelectCounty(selectedCounty);\n  //   }\n\n  //   this.setState({ arcs, selectedCounty });\n  // }\n\n  _renderLayers() {\n    const { data, strokeWidth = 4 } = this.props;\n\n    return [\n      new ArcLayer({\n        id: \"arc\",\n        data,\n        coef: 0.5,\n        getSourcePosition: d => d.from,\n        getTargetPosition: d => d.to,\n        getSourceColor: d =>\n          d.isUsetItem\n            ? USER_ITEM_COLOR\n            : d.highlighted\n            ? HIGHLIGHTED_COLOR\n            : DEFAULT_COLOR,\n        getTargetColor: d =>\n          d.isUsetItem\n            ? USER_ITEM_COLOR\n            : d.highlighted\n            ? HIGHLIGHTED_COLOR\n            : DEFAULT_COLOR,\n        getWidth: strokeWidth\n      })\n    ];\n  }\n\n  render() {\n    const {\n      mapStyle = \"mapbox://styles/mapbox/light-v9\",\n      userLocation\n    } = this.props;\n\n    return (\n      <DeckGL\n        layers={this._renderLayers()}\n        initialViewState={{\n          ...INITIAL_VIEW_STATE,\n          longitude: userLocation[0],\n          latitude: userLocation[1]\n        }}\n        controller={true}\n      >\n        <StaticMap\n          reuseMaps\n          mapStyle={mapStyle}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n\n        {this._renderTooltip}\n      </DeckGL>\n    );\n  }\n}\n\nexport default Map;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { format, differenceInMilliseconds } from \"date-fns\";\n\nfunction getCountdown(deadline) {\n  if (!deadline) return \"00:00:00\";\n\n  const diff = differenceInMilliseconds(deadline, +Date.now());\n\n  return format(diff, \"HH:mm:ss\");\n}\n\nfunction ItemBox(props) {\n  const [initTimestamp, setInitTimestamp] = useState(null);\n  const [countdownValue, setCountdownValue] = useState();\n\n  useEffect(() => {\n    if (!props.deadline) return null;\n\n    setInitTimestamp(+Date.now());\n    const deadlineInterval = setInterval(() => {\n      setCountdownValue(getCountdown(initTimestamp + props.deadline));\n    }, 1000);\n\n    return () => {\n      clearInterval(deadlineInterval);\n    };\n  }, []);\n\n  return (\n    <StyledItemBox\n      onMouseEnter={props.onHoverEnter}\n      onMouseLeave={props.onHoverLeave}\n      container\n      css={css`\n        opacity: ${!props.deadline ? 0.6 : 1};\n      `}\n      xs={12}\n    >\n      <Image item src={props.image} xs={6} />\n      <Info item xs={6}>\n        <Title>{props.title}</Title>\n        {/* TODO Only fist letter capital */}\n        <Description>{props.description}</Description>\n        <Price>\n          <strike\n            css={css`\n              opacity: 0.6;\n            `}\n          >\n            {props.price} €\n          </strike>{\" \"}\n          {Math.round(props.price * 0.8)} €\n        </Price>\n        <StyledBottomSection />\n        <StyledBottomSection isPlaceholder={true} />\n      </Info>\n      {!props.deadline ? <Overlay /> : null}\n    </StyledItemBox>\n  );\n}\n\nconst StyledItemBox = styled(Grid)`\n  position: relative;\n  margin: 1rem 0;\n  border-top: 2px solid transparent;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    transition: border-color 0.35s ease-in-out;\n    border-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Info = styled(Grid)`\n  position: relative;\n`;\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.1rem;\n  margin-top: 0.5rem;\n`;\nconst Description = styled.div`\n  margin-top: 0.5rem;\n  font-size: 0.8rem;\n`;\nconst Price = styled.div`\n  margin-top: 1rem;\n  font-size: 1.1rem;\n`;\nconst BottomSection = styled(Grid)`\n  position: ${props => (!props.isPlaceholder ? \"absolute\" : null)};\n  bottom: 0;\n  left: 0;\n  right: 0;\n  opacity: ${props => (!props.isPlaceholder ? 1 : 0)};\n`;\nconst Buy = styled(Button)``;\nconst Countdown = styled(Grid)``;\n\nconst StyledBottomSection = ({ countdownValue, isPlaceholder }) => (\n  <BottomSection isPlaceholder={isPlaceholder} container xs={12}>\n    <Grid item xs={6}>\n      <Buy\n        css={css`\n          width: 100%;\n        `}\n        variant=\"outlined\"\n      >\n        BUY\n      </Buy>\n    </Grid>\n    <Grid\n      css={css`\n        display: flexbox;\n        align-items: center;\n        justify-content: center;\n      `}\n      item\n      xs={6}\n    >\n      <Countdown>{countdownValue}</Countdown>\n    </Grid>\n  </BottomSection>\n);\n\nconst Image = props => (\n  <Grid\n    css={css`\n      height: 0;\n      padding-bottom: 50%;\n      position: relative;\n      overflow: hidden;\n    `}\n    {...props}\n  >\n    <div\n      css={css`\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      `}\n    >\n      <img\n        css={css`\n          max-width: 100%;\n          max-height: 100%;\n          margin: 0 auto;\n          display: block;\n        `}\n        src={props.src}\n      />\n    </div>\n  </Grid>\n);\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n`;\n\nexport default ItemBox;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n/** @jsx jsx */\nimport { Global, css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport Map from \"./Map\";\nimport ItemBox from \"./ItemBox\";\nimport Fuse from \"fuse.js\";\nimport qs from \"qs\";\n\nconst OPTIONS = {\n  shouldSort: true,\n  threshold: 0.6,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  keys: [\"title\", \"description\"]\n};\n\n// Source data GeoJSON\nconst DATA_URL =\n  \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/arc/counties.json\"; // eslint-disable-line\n\nconst MY_LOCATION = [24.8254933, 60.1866719];\n\nconst LOCATION_1 = [24.804905, 60.182799];\nconst LOCATION_2 = [24.852896, 60.179485];\nconst LOCATION_3 = [24.934519, 60.16687];\n\n// Add more items\nconst ITEMS = [\n  {\n    title: \"TOM WOOD\",\n    description: \"metallic coin pendant sterling silver necklace\",\n    price: 317,\n    image:\n      \"https://cdn-images.farfetch-contents.com/14/59/99/17/14599917_23150502_1000.jpg\",\n    deadline: 10000\n  },\n  {\n    title: \"AMI PARIS\",\n    description: \"Low Top Trainers\",\n    price: 306,\n    image:\n      \"https://cdn-images.farfetch-contents.com/13/20/77/56/13207756_21549202_1000.jpg\",\n    deadline: 10000\n  }\n];\n\nconst LOCATIONS = [\n  { from: MY_LOCATION, to: LOCATION_1 },\n  { from: MY_LOCATION, to: LOCATION_2 },\n  { from: MY_LOCATION, to: LOCATION_3 }\n];\n\nfunction App() {\n  const [search, setSearch] = useState(null);\n  const [data, setData] = useState([]);\n  var fuse = new Fuse(ITEMS, OPTIONS);\n  const userItem = getUserItem();\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function(position) {});\n    }\n    setTimeout(() => {\n      setData(LOCATIONS);\n    }, 2000);\n  }, []);\n\n  const onHover = key => {\n    return () => {\n      const newLocations = LOCATIONS.map((item, itemKey) =>\n        key === itemKey ? { ...item, highlighted: true } : { ...item }\n      );\n      setData(newLocations);\n    };\n  };\n\n  const onLeave = () => {\n    setData([...LOCATIONS]);\n  };\n\n  // const onChange = event => {\n  //   console.log(\"value\", event.target.value);\n  //   setSearch(event.target.value);\n  //   console.log(\"search\", search);\n  // };\n\n  return (\n    <AppContainer container spacing={3}>\n      <Global styles={GlobalStyles} />\n      <Grid item xs={3}>\n        <ItemContainer item xs={12}>\n          <TextField\n            // onChange={onChange}\n            id=\"outlined-helperText\"\n            label=\"Search\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </ItemContainer>\n        {/* Scrollable GRID */}\n        <Grid item xs={12}>\n          {userItem && (\n            <ItemBox\n              onHoverEnter={onHover(0)}\n              onHoverLeave={onLeave}\n              {...userItem}\n            />\n          )}\n          <div\n            css={css`\n              margin-top: 1rem;\n              padding: 2rem 1rem 1rem;\n            `}\n          >\n            You also may like:\n          </div>\n          {ITEMS.map((item, key) => (\n            <ItemBox\n              onHoverEnter={onHover(key + 1)}\n              onHoverLeave={onLeave}\n              {...item}\n            />\n          ))}\n          {/* {(search ? fuse.search(search) : ITEMS).map((item, key) => (\n            // <ItemBox\n            //   onHoverEnter={onHover(key)}\n            //   onHoverLeave={onLeave}\n            //   {...item}\n            // />\n          ))} */}\n        </Grid>\n      </Grid>\n      <MapContainer item xs={9}>\n        <Map data={data} userLocation={MY_LOCATION} />\n      </MapContainer>\n    </AppContainer>\n  );\n}\n\nfunction getUserItem() {\n  const query = qs.parse(window.location.search.substr(1));\n\n  if (query.product_json) {\n    const userItem = JSON.parse(query.product_json);\n\n    console.log(userItem);\n    return {\n      title: userItem.brand,\n      description: userItem.title,\n      price: userItem.price,\n      image: userItem.image_url,\n      deadline: 10000,\n      isUserItem: true\n    };\n  } else {\n    return null;\n  }\n}\n\nconst GlobalStyles = {\n  html: {\n    height: \"100%\"\n  },\n  body: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\",\n    fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`\n  },\n  \"#root\": {\n    height: \"100vh\"\n  }\n};\n\nconst AppContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst ItemContainer = styled(Grid)`\n  background: white;\n  padding-left: 1rem;\n`;\n\nconst MapContainer = styled(Grid)`\n  position: relative;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
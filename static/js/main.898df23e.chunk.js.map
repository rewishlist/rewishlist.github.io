{"version":3,"sources":["Map.js","ItemBox.js","App.js","index.js"],"names":["DEFAULT_COLOR","HIGHLIGHTED_COLOR","INITIAL_VIEW_STATE","zoom","maxZoom","pitch","bearing","Map","props","state","isMounted","this","data","strokeWidth","ArcLayer","id","coef","getSourcePosition","d","from","getTargetPosition","to","getSourceColor","highlighted","getTargetColor","getWidth","mapStyle","userLocation","layers","_renderLayers","initialViewState","longitude","latitude","controller","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","_renderTooltip","Component","getCountdown","deadline","diff","differenceInMilliseconds","Date","now","format","StyledItemBox","styled","Grid","Info","Title","div","Description","Price","BottomSection","Buy","Button","Countdown","Image","css","src","Overlay","ItemBox","useState","countdownValue","setCountdownValue","useEffect","deadlineInterval","setInterval","clearInterval","onMouseEnter","onHoverEnter","onMouseLeave","onHoverLeave","container","xs","item","image","title","description","price","Math","round","variant","MY_LOCATION","ITEMS","LOCATIONS","GlobalStyles","html","height","body","margin","padding","fontFamily","AppContainer","ItemContainer","MapContainer","App","setData","navigator","geolocation","getCurrentPosition","position","onHover","key","newLocations","map","itemKey","onLeave","spacing","styles","TextField","label","fullWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.898df23e.chunk.js","sourcesContent":["/* global fetch */\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { GeoJsonLayer, ArcLayer } from \"@deck.gl/layers\";\nimport { scaleQuantile } from \"d3-scale\";\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoiZ2FyeWFuaWtpbiIsImEiOiJjazMxa2M4aW8wNzhzM2JwOWdiYW94dmZqIn0.41wPlZxL13A9TVP2hkF9Zw\";\n\nconst DEFAULT_COLOR = [130, 130, 130];\nconst HIGHLIGHTED_COLOR = [255, 136, 0];\n\nconst INITIAL_VIEW_STATE = {\n  zoom: 11,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n\n/* eslint-disable react/no-deprecated */\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // hoveredCounty: null,\n      // Set default selection to San Francisco\n      // selectedCounty: null,\n      isMounted: false\n    };\n    // this._onHoverCounty = this._onHoverCounty.bind(this);\n    // this._onSelectCounty = this._onSelectCounty.bind(this);\n    // this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  // componentDidMount() {\n  //   if (!this.state.isMounted) {\n  //     this.setState({ isMounted: true });\n  //     this._recalculateArcs(this.props.data);\n  //   }\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.data !== this.props.data && this.state.isMounted) {\n  //     this._recalculateArcs(nextProps.data);\n  //   }\n  // }\n\n  // _onHoverCounty({ x, y, object }) {\n  //   this.setState({ x, y, hoveredCounty: object });\n  // }\n\n  // _onSelectCounty({ object }) {\n  //   this._recalculateArcs(this.props.data, object);\n  // }\n\n  // _renderTooltip() {\n  //   const { x, y, hoveredCounty } = this.state;\n  //   return (\n  //     hoveredCounty && (\n  //       <div className=\"tooltip\" style={{ left: x, top: y }}>\n  //         {hoveredCounty.properties.name}\n  //       </div>\n  //     )\n  //   );\n  // }\n\n  // _recalculateArcs(data, selectedCounty = this.state.selectedCounty) {\n  //   if (!data) {\n  //     return;\n  //   }\n  //   if (!selectedCounty) {\n  //     selectedCounty = data.find(f => f.properties.name === \"Los Angeles, CA\");\n  //   }\n  //   const { flows, centroid } = selectedCounty.properties;\n\n  //   const arcs = Object.keys(flows).map(toId => {\n  //     const f = data[toId];\n  //     return {\n  //       source: centroid,\n  //       target: f.properties.centroid,\n  //       value: flows[toId]\n  //     };\n  //   });\n\n  //   const scale = scaleQuantile()\n  //     .domain(arcs.map(a => Math.abs(a.value)))\n  //     .range(inFlowColors.map((c, i) => i));\n\n  //   arcs.forEach(a => {\n  //     a.gain = Math.sign(a.value);\n  //     a.quantile = scale(Math.abs(a.value));\n  //   });\n\n  //   if (this.props.onSelectCounty) {\n  //     this.props.onSelectCounty(selectedCounty);\n  //   }\n\n  //   this.setState({ arcs, selectedCounty });\n  // }\n\n  _renderLayers() {\n    const { data, strokeWidth = 4 } = this.props;\n\n    return [\n      new ArcLayer({\n        id: \"arc\",\n        data,\n        coef: 0.5,\n        getSourcePosition: d => d.from,\n        getTargetPosition: d => d.to,\n        getSourceColor: d =>\n          d.highlighted ? HIGHLIGHTED_COLOR : DEFAULT_COLOR,\n        getTargetColor: d =>\n          d.highlighted ? HIGHLIGHTED_COLOR : DEFAULT_COLOR,\n        getWidth: strokeWidth\n      })\n    ];\n  }\n\n  render() {\n    const {\n      mapStyle = \"mapbox://styles/mapbox/light-v9\",\n      userLocation\n    } = this.props;\n\n    return (\n      <DeckGL\n        layers={this._renderLayers()}\n        initialViewState={{\n          ...INITIAL_VIEW_STATE,\n          longitude: userLocation[0],\n          latitude: userLocation[1]\n        }}\n        controller={true}\n      >\n        <StaticMap\n          reuseMaps\n          mapStyle={mapStyle}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n\n        {this._renderTooltip}\n      </DeckGL>\n    );\n  }\n}\n\nexport default Map;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { format, differenceInMilliseconds } from \"date-fns\";\n\nfunction getCountdown(deadline) {\n  if (!deadline) return \"00:00:00\";\n\n  const diff = differenceInMilliseconds(deadline, +Date.now());\n  return format(diff, \"HH:mm:ss\");\n}\n\nfunction ItemBox(props) {\n  const [countdownValue, setCountdownValue] = useState(\n    getCountdown(props.deadline)\n  );\n\n  useEffect(() => {\n    const deadlineInterval = setInterval(() => {\n      setCountdownValue(getCountdown(props.deadline));\n    }, 1000);\n\n    return () => {\n      clearInterval(deadlineInterval);\n    };\n  }, []);\n\n  return (\n    <StyledItemBox\n      onMouseEnter={props.onHoverEnter}\n      onMouseLeave={props.onHoverLeave}\n      container\n      css={css`\n        opacity: ${!props.deadline ? 0.6 : 1};\n      `}\n      xs={12}\n    >\n      <Image item src={props.image} xs={6} />\n      <Info item xs={6}>\n        <Title>{props.title}</Title>\n        <Description>{props.description}</Description>\n        <Price>\n          <strike\n            css={css`\n              opacity: 0.6;\n            `}\n          >\n            {props.price} €\n          </strike>{\" \"}\n          {Math.round(props.price * 0.8)} €\n        </Price>\n        <BottomSection container xs={12}>\n          <Grid item xs={6}>\n            <Buy\n              css={css`\n                width: 100%;\n              `}\n              variant=\"outlined\"\n            >\n              BUY\n            </Buy>\n          </Grid>\n          <Grid\n            css={css`\n              display: flexbox;\n              align-items: center;\n              justify-content: center;\n            `}\n            item\n            xs={6}\n          >\n            <Countdown>{countdownValue}</Countdown>\n          </Grid>\n        </BottomSection>\n      </Info>\n      {!props.deadline ? <Overlay /> : null}\n    </StyledItemBox>\n  );\n}\n\nconst StyledItemBox = styled(Grid)`\n  position: relative;\n  margin: 1rem 0;\n  border-top: 2px solid transparent;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    transition: border-color 0.35s ease-in-out;\n    border-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Info = styled(Grid)`\n  position: relative;\n`;\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.5rem;\n  margin-top: 0.5rem;\n`;\nconst Description = styled.div`\n  margin-top: 0.5rem;\n`;\nconst Price = styled.div`\n  margin-top: 1rem;\n  font-size: 1.5rem;\n`;\nconst BottomSection = styled(Grid)`\n  position: absolute;\n  bottom: 1rem;\n  left: 0;\n  right: 0;\n`;\nconst Buy = styled(Button)``;\nconst Countdown = styled(Grid)``;\n\nconst Image = props => (\n  <Grid\n    css={css`\n      height: 0;\n      padding-bottom: 50%;\n      position: relative;\n      overflow: hidden;\n    `}\n    {...props}\n  >\n    <div\n      css={css`\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      `}\n    >\n      <img\n        css={css`\n          max-width: 100%;\n          max-height: 100%;\n          margin: 0 auto;\n          display: block;\n        `}\n        src={props.src}\n      />\n    </div>\n  </Grid>\n);\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n`;\n\nexport default ItemBox;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n/** @jsx jsx */\nimport { Global, css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport Map from \"./Map\";\nimport ItemBox from \"./ItemBox\";\n\n// Source data GeoJSON\nconst DATA_URL =\n  \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/arc/counties.json\"; // eslint-disable-line\n\nconst MY_LOCATION = [24.8254933, 60.1866719];\n\nconst LOCATION_1 = [24.804905, 60.182799];\nconst LOCATION_2 = [24.852896, 60.179485];\nconst LOCATION_3 = [24.934519, 60.16687];\n\nconst ITEMS = [\n  {\n    title: \"TOM WOOD\",\n    description: \"metallic coin pendant sterling silver necklace\",\n    price: 317,\n    image:\n      \"https://cdn-images.farfetch-contents.com/14/59/99/17/14599917_23150502_1000.jpg\",\n    deadline: 157393\n  },\n  {\n    title: \"AMI PARIS\",\n    description: \"Low Top Trainers\",\n    price: 306,\n    image:\n      \"https://cdn-images.farfetch-contents.com/13/20/77/56/13207756_21549202_1000.jpg\",\n    deadline: 1573\n  },\n  {\n    title: \"TOM WOOD\",\n    description: \"silver Ice band ring\",\n    price: 388,\n    image:\n      \"https://cdn-images.farfetch-contents.com/13/54/98/80/13549880_17274963_1000.jpg\",\n    deadline: false\n  }\n];\n\nconst LOCATIONS = [\n  { from: MY_LOCATION, to: LOCATION_1 },\n  { from: MY_LOCATION, to: LOCATION_2 },\n  { from: MY_LOCATION, to: LOCATION_3 }\n];\n\nfunction App() {\n  const [data, setData] = useState(LOCATIONS);\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function(position) {});\n    }\n  }, []);\n\n  const onHover = key => {\n    return () => {\n      const newLocations = LOCATIONS.map((item, itemKey) =>\n        key === itemKey ? { ...item, highlighted: true } : { ...item }\n      );\n      setData(newLocations);\n    };\n  };\n\n  const onLeave = () => {\n    setData([...LOCATIONS]);\n  };\n\n  return (\n    <AppContainer container spacing={3}>\n      <Global styles={GlobalStyles} />\n      <Grid item xs={3}>\n        <ItemContainer item xs={12}>\n          <TextField\n            id=\"outlined-helperText\"\n            label=\"Search\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </ItemContainer>\n        <Grid item xs={12}>\n          {ITEMS.map((item, key) => (\n            <ItemBox\n              onHoverEnter={onHover(key)}\n              onHoverLeave={onLeave}\n              {...item}\n            />\n          ))}\n        </Grid>\n      </Grid>\n      <MapContainer item xs={9}>\n        {data ? <Map data={data} userLocation={MY_LOCATION} /> : null}\n      </MapContainer>\n    </AppContainer>\n  );\n}\nconst GlobalStyles = {\n  html: {\n    height: \"100%\"\n  },\n  body: {\n    margin: 0,\n    padding: 0,\n    height: \"100%\",\n    fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`\n  },\n  \"#root\": {\n    height: \"100vh\"\n  }\n};\n\nconst AppContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst ItemContainer = styled(Grid)`\n  background: white;\n  padding-left: 1rem;\n`;\n\nconst MapContainer = styled(Grid)`\n  position: relative;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}